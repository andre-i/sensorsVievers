
   Файл краткой справки.

===============   НАСТРОЙКИ  МОДУЛЯ  ==============================
В программу жёсто вшиты параметры сети - их вводить не нужно
 local_IP(192,168,4,2) - адрес чипа
 gateway(192,168,4,1)  - адрес шлюза
 subnet(255,255,255,0) - размерность сети


Перед работой модуль должен быть настроен. 
1.Обязательными являются настройки сети. 
2.Настройки интерфейсов I2C и oneWire могут не указываться( в таком случае
  используют значения из DefaultProps.h). 

3. Настройки записываются в файл. 
При повторном включени параметры заново не вводятся. 
При каждой смене каких-либо параметров абсолютно все настройки необходимо 
перезаписывать.

Файл настроек содержитследующие поля:
-------------------------------------------------------------------------
            параметр                         | значение по умолчанию  
-------------------------------------------------------------------------
   SSID - имя сети 			     | ESP8266 
   PASSWD - пароль сети не менее 8 символов  | my.esp8266 
   I2C_SCL - GPIO SCL интерфейса  I2C 	     | 5 
   I2C_SDA - GPIO SDA интерфейса I2C 	     | 4 
   ONE_WIRE - GPIO интерфейса OneWire 	     | 12 
-------------------------------------------------------------------------
Значения по умолчанию - для изменения 
 необходимо править defaultProps.h и перекомпилировать прошивку, ну и 
 схему придётся переделывать( если изменены номера пинов, при изменении
 логина и пароля схема остаётся прежней )


 I  Модуль работает как точка доступа вайфай сети. Для его работы необходимо 
вводить имя сети и её пароль - первые две настройки.

 II Следующие две настройки указывают на то, к каким пинам необходимо 
     присоединять I2C устройства. Если не знаете, что указывать, то для 
     связи с устройствами используйте :
                         GPIO5 модуля ESP8266( D1 - nodeMCU) - SCL
                         GPIO4 модуля ESP8266( D2 - nodeMCU) - SDA

 III Пятая настройка - номер пина для связи с oneWire устройством (DS18B20)
     По умолчанию стоит GPIO12 модуля ESP8266(D5 - nodeMCU)

(зачем надо переназначать пины не знаю, но пусть будет)

Всё ниже указано в файле 'properties.h'  и задаётся только при компиляции.

   LED_PIN - где подключен светодиод, NodeMCU это пин 2. Редко мигает - с
      модулями всё Ок ,часто мигает - ошибка

   MOSFET_PIN - подтянут к земле, управляет защитным транзистором. 
      Строго не нужен, но при включении служит какой-никакой защитой. 
      Параллельно можно подключить светодиод для индикации незащищённого 
      режима. 
      Светится  - внимание! Защиты нет вообще.

    BUTTON_PIN - подтянут к vcc задаёт режим защитного транзистора

====================================================================

для связи с модулем в адресную строку ввести 192.168.4.2


==================  команды  последовательного порта  ======================
============================================================================

возможно выполнение команд:
   'rp'(read properties) - чтение файла настроек
   'cr'(chip reset) - перезагрузка чипа
   'clear'(clear setting and reboot) - сброс настроек и перезагрузка
   'w'(write new values) - запись новых настроек
          DEBUG (ОТЛАДКА) 
  'dt'(debug true) - отладка включена
  'df'(debug false) - отладка отключена

При наборе других символов показывается файл справки(этот).



==================================  END  ========================================


